[
    {
        "input": "Write test cases for login functionality",
        "answer": "### Test Cases for Login Functionality\n\n#### Happy Path\n1. **Test Case ID:** TC_LOGIN_001  \n   **Description:** User logs in with valid credentials.  \n   **Precondition:** User must have a registered account.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Enter valid username.  \n   - Enter valid password.  \n   - Click on the login button.  \n   **Expected Result:** User is successfully logged in and redirected to the dashboard.\n\n#### Edge Cases\n2. **Test Case ID:** TC_LOGIN_002  \n   **Description:** User attempts to log in with an invalid username.  \n   **Precondition:** None.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Enter invalid username.  \n   - Enter valid password.  \n   - Click on the login button.  \n   **Expected Result:** Error message displayed: \"Invalid username or password.\"\n\n3. **Test Case ID:** TC_LOGIN_003  \n   **Description:** User attempts to log in with an invalid password.  \n   **Precondition:** None.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Enter valid username.  \n   - Enter invalid password.  \n   - Click on the login button.  \n   **Expected Result:** Error message displayed: \"Invalid username or password.\"\n\n4. **Test Case ID:** TC_LOGIN_004  \n   **Description:** User attempts to log in with empty username and password fields.  \n   **Precondition:** None.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Leave username field empty.  \n   - Leave password field empty.  \n   - Click on the login button.  \n   **Expected Result:** Error message displayed: \"Username and password cannot be empty.\"\n\n5. **Test Case ID:** TC_LOGIN_005  \n   **Description:** User attempts to log in with a locked account.  \n   **Precondition:** User's account must be locked.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Enter valid username.  \n   - Enter valid password.  \n   - Click on the login button.  \n   **Expected Result:** Error message displayed: \"Your account is locked. Please contact support.\"\n\n6. **Test Case ID:** TC_LOGIN_006  \n   **Description:** User experiences a timeout during login.  \n   **Precondition:** Simulate network latency or server delay.  \n   **Test Steps:**  \n   - Navigate to login page.  \n   - Enter valid username.  \n   - Enter valid password.  \n   - Click on the login button and wait for response.  \n   **Expected Result:** Error message displayed: \"Login request timed out. Please try again.\"\n\n7. **Test Case ID:** TC_LOGIN_007  \n   **Description:** User attempts to log in with an expired session.  \n   **Precondition:** User must be logged in with a session that has expired.  \n   **Test Steps:**  \n   - Navigate to a restricted page (while session is expired).  \n   - The system redirects to the login page.  \n   - Enter valid username.  \n   - Enter valid password.  \n   - Click on the login button.  \n   **Expected Result:** Error message displayed: \"Your session has expired. Please log in again.\"",
        "expected_result": "pass"
    },
    {
        "input": "Write an automation script using Selenium with Java for a signup functionality",
        "answer": "### Automation Script: Signup Functionality (Selenium with Java)\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class SignupAutomation {\n    public static void main(String[] args) {\n        // Set the path for the WebDriver\n        System.setProperty(\"webdriver.chrome.driver\", \"path/to/chromedriver\");\n        WebDriver driver = new ChromeDriver();\n\n        // Happy Path: Successful Signup\n        try {\n            driver.get(\"https://example.com/signup\");\n            WebElement username = driver.findElement(By.id(\"username\"));\n            WebElement email = driver.findElement(By.id(\"email\"));\n            WebElement password = driver.findElement(By.id(\"password\"));\n            WebElement signupButton = driver.findElement(By.id(\"signupButton\"));\n\n            username.sendKeys(\"validUser\");\n            email.sendKeys(\"valid@example.com\");\n            password.sendKeys(\"StrongPassword123\");\n            signupButton.click();\n\n            // Verify successful signup (this will depend on the application specifics)\n            String successMessage = driver.findElement(By.id(\"successMessage\")).getText();\n            System.out.println(\"Success Message: \" + successMessage);\n        } finally {\n            driver.quit(); // Close the browser regardless of the outcome\n        }\n\n        // Edge Case 1: Submitting with empty fields\n        try {\n            driver = new ChromeDriver();\n            driver.get(\"https://example.com/signup\");\n            signupButton = driver.findElement(By.id(\"signupButton\"));\n            signupButton.click();\n\n            // Verify error message for empty fields\n            String emptyFieldError = driver.findElement(By.id(\"errorMessage\")).getText();\n            System.out.println(\"Empty Field Error: \" + emptyFieldError);\n        } finally {\n            driver.quit();\n        }\n\n        // Edge Case 2: Submitting with invalid email\n        try {\n            driver = new ChromeDriver();\n            driver.get(\"https://example.com/signup\");\n            username.sendKeys(\"testUser\");\n            email.sendKeys(\"invalidEmailFormat\");\n            password.sendKeys(\"ValidPassword123\");\n            signupButton.click();\n\n            // Verify error message for invalid email\n            String invalidEmailError = driver.findElement(By.id(\"errorMessage\")).getText();\n            System.out.println(\"Invalid Email Error: \" + invalidEmailError);\n        } finally {\n            driver.quit();\n        }\n\n        // Edge Case 3: Submitting with weak password\n        try {\n            driver = new ChromeDriver();\n            driver.get(\"https://example.com/signup\");\n            username.sendKeys(\"testUser2\");\n            email.sendKeys(\"valid@example.com\");\n            password.sendKeys(\"123\"); // Weak password\n            signupButton.click();\n\n            // Verify error message for weak password\n            String weakPasswordError = driver.findElement(By.id(\"errorMessage\")).getText();\n            System.out.println(\"Weak Password Error: \" + weakPasswordError);\n        } finally {\n            driver.quit();\n        }\n    }\n}",
        "expected_result": "pass"
    },
    {
        "input": "Write an automation script for logout functionality",
        "answer": "import org.openqa.selenium.By;",
        "expected_result": "fail"
    },
    {
        "input": "Write test cases for search functionality",
        "answer": "### Test Cases for Search Functionality\n\n#### Test Case 1: Search\n- **Description**: Validate correct search\n- **Steps**:\n  1. Search\n- **Expected Result**: Results appear.",
        "expected_result": "fail"
    }
]
